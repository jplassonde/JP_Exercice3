;;*****************************************************************************
;;*****************************************************************************
;;  FILENAME: I2C.inc
;;  Version: 2.00, Updated on 2015/3/4 at 22:26:32
;;  Generated by PSoC Designer 5.4.3191
;;
;;  DESCRIPTION: Assembler declarations for the I2Cm user module interface.
;;
;;-----------------------------------------------------------------------------
;;  Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
;;*****************************************************************************
;;*****************************************************************************

;--------------------------------------------------
; Constants for I2C API's
;--------------------------------------------------
;24 MHz
I2C_delayqtr:     equ   2            ; Define delays for proper timing at 24 MHz
I2C_delayhalf:    equ   5
I2C_delay3qtr:    equ   12

;12 MHz
;I2C_delayqtr:    equ   3
;I2C_delayhalf:   equ   3
;I2C_delay3qtr:   equ   3

I2C_SDA_pin:      equ   40h ; bit number of for SDA
I2C_SCL_pin:      equ   80h ; bit number of for SCL
I2C_I2CPortNum:   equ   0h     ; Port number to use for I2C Both pins will be on this port

I2C_DriveMode2:   equ   1

;-----------------
; Bank 0
;-----------------
I2C_I2CPRTDR:     equ   PRT0DR  ; Port number to use for I2C Both pins will be on this port

IF(I2C_DriveMode2)
I2C_I2CPRTDM2:                         equ   PRT0DM2  ; Port number to use for I2C Both pins will be on this port
ENDIF

;-----------------
; Bank 1
;-----------------

I2C_I2CPRTDM0:                         equ   PRT0DM0  ; Port number to use for I2C Both pins will be on this port
I2C_I2CPRTDM1:                         equ   PRT0DM1  ; Port number to use for I2C Both pins will be on this port

;-----------------
; Misc
;-----------------
I2C_READ:           equ  0x01 ; Set the R/W flag after the slave address.
I2C_WRITE:          equ  0x00 ; Clear the R/W flag after the slave address.
I2C_XFER_ERROR:     equ  0x00 ; Slave did not ACK
I2C_XFER_COMPLETE:  equ  0x01 ; Returned if Slave did ACK

I2C_CompleteXfer:   equ  0x00 ; Perform a complete I2C transfer
I2C_RepStart:       equ  0x01 ; Perform a complete transfer with a Repeat Start
I2C_NoStop:         equ  0x02 ; Perform a complete transfer, but leave off the stop.

I2C_NAKslave:       equ  0x00 ; NAK the slave after a read
I2C_ACKslave:       equ  0x01 ; ACK the slave after a read

; end of file I2C.inc
